import PropTypes from 'prop-types'

import { FC } from '@/model/commonModel'

type FullLogoType = {
  color?: [string, string]
  textColor?: string
  id?: string
}

type SvgIcon = {
  width?: string
  height?: string
  color?: string
  className?: string
}

export const FullLogo: FC<FullLogoType> = ({ color = ['#53BCFF', '#1CA2F7'], textColor = '#212121', id = '1' }) => {
  const number1 = id + 'fullLogo'
  const number2 = number1 + '2'
  return (
    <svg viewBox='0 0 172 16' fill='none' xmlns='http://www.w3.org/2000/svg'>
      <path
        d='M27.4011 4.1618C28.0456 5.27309 28.3981 6.51785 28.4282 7.7887L28.4251 7.78572C28.4413 8.62166 28.3295 9.45536 28.0941 10.2604C27.7244 11.5227 26.8093 12.989 25.7944 13.8447C23.3768 15.8805 21.6138 15.998 18.4098 15.998C18.3155 15.998 18.2232 15.9985 18.1326 15.999C17.1617 16.0042 16.4045 16.0084 15.8435 15.38C15.3315 14.8076 15.1429 13.8008 15.6764 13.058C16.1762 12.3608 16.8186 12.1994 17.9943 12.214L18.0172 12.2145C18.5877 12.225 19.8842 12.2489 20.4119 12.214C22.6556 12.0566 24.4151 10.3067 24.4944 8.15416C24.4882 6.64822 23.8214 5.54301 23.055 4.8869C21.6682 3.7008 20.0817 3.75927 18.6933 3.81044C17.3343 3.86052 16.1651 3.90361 15.5584 2.76596C14.8578 1.43906 15.8819 0.128347 17.1573 0.0344002C18.1661 -0.0389968 20.9087 -0.000830013 21.8562 0.206118C24.2752 0.747754 26.2391 2.1436 27.4011 4.1618Z'
        fill={`url(#paint${number1}_linear)`}
      />
      <path
        d='M6.57419 0.206214C4.15363 0.74785 2.19004 2.1437 1.0327 4.16176C0.386522 5.27269 0.0324466 6.51753 0.00104638 7.7888C-0.0121977 8.62379 0.100343 9.45628 0.335194 10.2605C0.704661 11.5228 1.6198 12.9891 2.63446 13.8448C5.05186 15.8806 6.8147 15.9981 10.0185 15.9981C10.1129 15.9981 10.2054 15.9986 10.296 15.9991C11.268 16.0043 12.0237 16.0084 12.5846 15.3801C13.098 14.8077 13.2851 13.8009 12.7517 13.0581C12.252 12.3609 11.6096 12.1995 10.4355 12.2141C10.2091 12.217 9.99997 12.22 9.80605 12.2229C8.99412 12.2347 8.44847 12.2427 8.01665 12.2141C5.77326 12.0567 4.01375 10.3068 3.93449 8.15426C3.9406 6.64832 4.60734 5.5431 5.37386 4.887C6.76054 3.7009 8.34687 3.75937 9.73519 3.81053C11.094 3.86061 12.2632 3.9037 12.8698 2.76606C13.5703 1.43916 12.5464 0.128443 11.271 0.0344962C10.2624 -0.0389008 7.51999 -0.000734041 6.57419 0.206214Z'
        fill={`url(#paint${number2}_linear)`}
      />
      <path
        d='M47.6908 5.05449C47.5753 4.62637 47.4166 4.2328 47.2143 3.87372C47.0122 3.51465 46.7523 3.20392 46.4347 2.94154C46.1171 2.67914 45.7416 2.4789 45.3083 2.34081C44.8896 2.18888 44.3987 2.11294 43.8356 2.11294C43.0126 2.11294 42.2977 2.27174 41.6913 2.58939C41.0992 2.90703 40.6156 3.33513 40.2401 3.87372C39.8647 4.39848 39.583 4.99923 39.3956 5.67594C39.2222 6.35261 39.1357 7.04313 39.1357 7.74744C39.1357 8.45176 39.2222 9.14226 39.3956 9.81895C39.583 10.4956 39.8647 11.1033 40.2401 11.6419C40.6156 12.1667 41.0992 12.5879 41.6913 12.9055C42.2977 13.2231 43.0126 13.382 43.8356 13.382C44.442 13.382 44.9762 13.2853 45.4384 13.0919C45.9004 12.8848 46.2975 12.6086 46.6296 12.2633C46.9618 11.9043 47.2217 11.49 47.4094 11.0204C47.597 10.5509 47.7198 10.0468 47.7776 9.50822H50.42C50.3622 10.3921 50.1601 11.1999 49.8134 11.9319C49.4812 12.6638 49.0264 13.2991 48.449 13.8377C47.8714 14.3625 47.1927 14.7699 46.413 15.0598C45.6333 15.3498 44.7742 15.4949 43.8356 15.4949C42.6804 15.4949 41.6408 15.2946 40.7167 14.8941C39.8071 14.4799 39.0346 13.9205 38.3992 13.2162C37.7638 12.5119 37.273 11.6902 36.9263 10.7511C36.5941 9.81204 36.4282 8.81083 36.4282 7.74744C36.4282 6.69789 36.5941 5.70353 36.9263 4.76448C37.273 3.82539 37.7638 3.0037 38.3992 2.29937C39.0346 1.59507 39.8071 1.03576 40.7167 0.621447C41.6408 0.207155 42.6804 0 43.8356 0C44.7019 0 45.5177 0.117384 46.283 0.352153C47.0484 0.573115 47.7198 0.904549 48.2974 1.34649C48.8895 1.77459 49.3659 2.29937 49.7268 2.92084C50.0876 3.54228 50.3117 4.2535 50.3983 5.05449H47.6908ZM57.6037 15.4327C56.7086 15.4327 55.9071 15.2946 55.1995 15.0185C54.5065 14.7284 53.9146 14.3348 53.4234 13.8377C52.947 13.3405 52.5788 12.7467 52.3189 12.0562C52.0737 11.3657 51.9507 10.6061 51.9507 9.77753C51.9507 8.96272 52.0737 8.2101 52.3189 7.51958C52.5788 6.82906 52.947 6.23525 53.4234 5.73808C53.9146 5.24093 54.5065 4.85425 55.1995 4.57804C55.9071 4.28803 56.7086 4.14301 57.6037 4.14301C58.499 4.14301 59.2931 4.28803 59.9862 4.57804C60.6939 4.85425 61.286 5.24093 61.7625 5.73808C62.2533 6.23525 62.6216 6.82906 62.8672 7.51958C63.1269 8.2101 63.2569 8.96272 63.2569 9.77753C63.2569 10.6061 63.1269 11.3657 62.8672 12.0562C62.6216 12.7467 62.2533 13.3405 61.7625 13.8377C61.286 14.3348 60.6939 14.7284 59.9862 15.0185C59.2931 15.2946 58.499 15.4327 57.6037 15.4327ZM57.6037 13.5684C58.1525 13.5684 58.6289 13.4579 59.0331 13.2369C59.4376 13.016 59.7698 12.726 60.0295 12.3669C60.2894 12.0078 60.4772 11.6074 60.5928 11.1654C60.7228 10.7097 60.7879 10.2471 60.7879 9.77753C60.7879 9.32178 60.7228 8.86605 60.5928 8.41032C60.4772 7.95459 60.2894 7.55409 60.0295 7.20885C59.7698 6.84978 59.4376 6.55977 59.0331 6.33882C58.6289 6.11786 58.1525 6.00737 57.6037 6.00737C57.0551 6.00737 56.5787 6.11786 56.1741 6.33882C55.77 6.55977 55.4378 6.84978 55.1779 7.20885C54.918 7.55409 54.723 7.95459 54.5931 8.41032C54.4777 8.86605 54.4198 9.32178 54.4198 9.77753C54.4198 10.2471 54.4777 10.7097 54.5931 11.1654C54.723 11.6074 54.918 12.0078 55.1779 12.3669C55.4378 12.726 55.77 13.016 56.1741 13.2369C56.5787 13.4579 57.0551 13.5684 57.6037 13.5684ZM65.2444 4.43303H67.5836V6.00737L67.6269 6.04881C68.0024 5.45498 68.4932 4.99233 69.0998 4.6609C69.7062 4.31566 70.3776 4.14301 71.1141 4.14301C72.3416 4.14301 73.3089 4.44683 74.0164 5.05449C74.7241 5.66213 75.0776 6.57359 75.0776 7.78888V15.1428H72.6085V8.41032C72.5797 7.56793 72.3919 6.96027 72.0454 6.5874C71.6987 6.20072 71.1574 6.00737 70.4209 6.00737C70.0023 6.00737 69.6269 6.08332 69.2947 6.23525C68.9627 6.37333 68.6812 6.57359 68.4499 6.83598C68.219 7.08457 68.0384 7.38149 67.9086 7.72674C67.7785 8.07198 67.7135 8.43795 67.7135 8.82463V15.1428H65.2444V4.43303ZM77.6166 4.43303H79.9558V6.00737L79.9991 6.04881C80.3746 5.45498 80.8654 4.99233 81.4718 4.6609C82.0784 4.31566 82.7498 4.14301 83.4863 4.14301C84.7134 4.14301 85.6811 4.44683 86.3884 5.05449C87.0959 5.66213 87.4498 6.57359 87.4498 7.78888V15.1428H84.9807V8.41032C84.9517 7.56793 84.7641 6.96027 84.4176 6.5874C84.0709 6.20072 83.5295 6.00737 82.7931 6.00737C82.3743 6.00737 81.9991 6.08332 81.6669 6.23525C81.3347 6.37333 81.0531 6.57359 80.8221 6.83598C80.5912 7.08457 80.4106 7.38149 80.2807 7.72674C80.1507 8.07198 80.0857 8.43795 80.0857 8.82463V15.1428H77.6166V4.43303ZM97.6775 8.84535C97.6487 8.47248 97.5621 8.1134 97.4175 7.76816C97.2875 7.42292 97.0999 7.12599 96.8544 6.87741C96.6235 6.61503 96.3346 6.40788 95.9879 6.25597C95.6561 6.09023 95.2807 6.00737 94.8617 6.00737C94.4287 6.00737 94.0316 6.08332 93.6705 6.23525C93.324 6.37333 93.0208 6.57359 92.7609 6.83598C92.5156 7.08457 92.3133 7.38149 92.1545 7.72674C92.0101 8.07198 91.9308 8.44485 91.9161 8.84535H97.6775ZM91.9161 10.399C91.9161 10.8133 91.9741 11.2138 92.0894 11.6005C92.2193 11.9871 92.4073 12.3255 92.6526 12.6155C92.8982 12.9055 93.2086 13.1403 93.5839 13.3198C93.9594 13.4855 94.4069 13.5684 94.9267 13.5684C95.6489 13.5684 96.2263 13.4234 96.6594 13.1334C97.1073 12.8296 97.4391 12.3807 97.6557 11.7869H99.9949C99.8651 12.3669 99.6414 12.8848 99.3235 13.3405C99.006 13.7962 98.6235 14.1829 98.1755 14.5005C97.728 14.8044 97.2227 15.0322 96.6594 15.1841C96.1109 15.3498 95.5331 15.4327 94.9267 15.4327C94.0461 15.4327 93.2664 15.2946 92.5875 15.0185C91.909 14.7421 91.3313 14.3556 90.8549 13.8584C90.393 13.3612 90.0391 12.7674 89.7935 12.0769C89.5626 11.3864 89.447 10.6268 89.447 9.79823C89.447 9.0387 89.5698 8.32055 89.8153 7.64388C90.0752 6.95336 90.4363 6.35261 90.8982 5.84166C91.3747 5.31687 91.9451 4.90256 92.6093 4.59874C93.2736 4.29494 94.0244 4.14301 94.8617 4.14301C95.7427 4.14301 96.5295 4.32254 97.2227 4.68162C97.9303 5.02686 98.5152 5.4895 98.977 6.06953C99.4391 6.64954 99.7713 7.31934 99.9732 8.07889C100.19 8.82463 100.248 9.59801 100.147 10.399H91.9161ZM109.518 8.01675C109.417 7.35386 109.135 6.85669 108.673 6.52526C108.225 6.18002 107.655 6.00737 106.962 6.00737C106.644 6.00737 106.305 6.06262 105.944 6.17309C105.583 6.26975 105.251 6.4631 104.948 6.75312C104.645 7.02932 104.392 7.42291 104.19 7.93387C103.987 8.43104 103.887 9.08702 103.887 9.90181C103.887 10.3438 103.937 10.7856 104.038 11.2276C104.154 11.6695 104.327 12.0631 104.558 12.4083C104.803 12.7536 105.114 13.0367 105.489 13.2577C105.865 13.4648 106.319 13.5684 106.854 13.5684C107.576 13.5684 108.168 13.3543 108.63 12.9262C109.106 12.4981 109.402 11.8974 109.518 11.124H111.987C111.756 12.5188 111.2 13.5891 110.319 14.3348C109.453 15.0668 108.298 15.4327 106.854 15.4327C105.973 15.4327 105.193 15.2946 104.515 15.0185C103.85 14.7284 103.287 14.3417 102.825 13.8584C102.363 13.3612 102.009 12.7743 101.764 12.0976C101.533 11.4209 101.417 10.689 101.417 9.90181C101.417 9.10084 101.533 8.34818 101.764 7.64388C101.995 6.93955 102.341 6.33191 102.804 5.82094C103.265 5.29615 103.836 4.88876 104.515 4.59874C105.208 4.29494 106.016 4.14301 106.94 4.14301C107.59 4.14301 108.204 4.22587 108.781 4.39161C109.373 4.54352 109.893 4.77827 110.341 5.09591C110.803 5.41356 111.178 5.81402 111.467 6.29739C111.756 6.78075 111.929 7.35386 111.987 8.01675H109.518ZM112.803 4.43303H114.665V1.22219H117.134V4.43303H119.365V6.19381H117.134V11.9112C117.134 12.1598 117.142 12.3738 117.156 12.5534C117.185 12.7329 117.236 12.8848 117.308 13.0091C117.394 13.1334 117.517 13.23 117.676 13.2991C117.835 13.3543 118.051 13.382 118.326 13.382C118.499 13.382 118.672 13.382 118.846 13.382C119.019 13.3681 119.192 13.3405 119.365 13.2991V15.1221C119.091 15.1497 118.824 15.1773 118.564 15.2049C118.304 15.2325 118.037 15.2462 117.763 15.2462C117.113 15.2462 116.586 15.191 116.182 15.0805C115.792 14.9564 115.481 14.7837 115.25 14.5627C115.034 14.3279 114.882 14.0379 114.795 13.6927C114.723 13.3474 114.68 12.9538 114.665 12.5119V6.19381H112.803V4.43303ZM121.271 12.3462H124.282V15.1428H121.271V12.3462ZM137.826 5.05449C137.71 4.62637 137.552 4.2328 137.349 3.87372C137.147 3.51465 136.887 3.20392 136.57 2.94154C136.252 2.67914 135.877 2.4789 135.444 2.34081C135.025 2.18888 134.534 2.11294 133.971 2.11294C133.148 2.11294 132.433 2.27174 131.826 2.58939C131.234 2.90703 130.751 3.33513 130.375 3.87372C130 4.39848 129.718 4.99923 129.531 5.67594C129.357 6.35261 129.271 7.04313 129.271 7.74744C129.271 8.45176 129.357 9.14226 129.531 9.81895C129.718 10.4956 130 11.1033 130.375 11.6419C130.751 12.1667 131.234 12.5879 131.826 12.9055C132.433 13.2231 133.148 13.382 133.971 13.382C134.577 13.382 135.111 13.2853 135.573 13.0919C136.036 12.8848 136.432 12.6086 136.765 12.2633C137.097 11.9043 137.357 11.49 137.544 11.0204C137.732 10.5509 137.855 10.0468 137.913 9.50822H140.555C140.497 10.3921 140.295 11.1999 139.949 11.9319C139.616 12.6638 139.161 13.2991 138.584 13.8377C138.007 14.3625 137.328 14.7699 136.548 15.0598C135.768 15.3498 134.909 15.4949 133.971 15.4949C132.815 15.4949 131.776 15.2946 130.852 14.8941C129.942 14.4799 129.17 13.9205 128.534 13.2162C127.899 12.5119 127.408 11.6902 127.061 10.7511C126.729 9.81204 126.563 8.81083 126.563 7.74744C126.563 6.69789 126.729 5.70353 127.061 4.76448C127.408 3.82539 127.899 3.0037 128.534 2.29937C129.17 1.59507 129.942 1.03576 130.852 0.621447C131.776 0.207155 132.815 0 133.971 0C134.837 0 135.653 0.117384 136.418 0.352153C137.183 0.573115 137.855 0.904549 138.432 1.34649C139.025 1.77459 139.501 2.29937 139.862 2.92084C140.223 3.54228 140.447 4.2535 140.533 5.05449H137.826ZM142.671 0.352153H145.14V15.1428H142.671V0.352153ZM157.598 15.1428H155.172V13.6513H155.129C154.826 14.1898 154.371 14.6248 153.765 14.9564C153.172 15.274 152.566 15.4327 151.945 15.4327C150.472 15.4327 149.404 15.0876 148.74 14.397C148.09 13.6927 147.765 12.6362 147.765 11.2276V4.43303H150.234V10.9997C150.234 11.9388 150.422 12.6017 150.797 12.9884C151.173 13.375 151.7 13.5684 152.378 13.5684C152.898 13.5684 153.331 13.4924 153.678 13.3405C154.024 13.1886 154.306 12.9884 154.523 12.7398C154.739 12.4774 154.891 12.1667 154.977 11.8076C155.078 11.4485 155.129 11.0619 155.129 10.6476V4.43303H157.598V15.1428ZM160.202 0.352153H162.671V5.82094H162.715C162.888 5.55856 163.097 5.32379 163.343 5.11663C163.588 4.90948 163.855 4.73685 164.144 4.59874C164.447 4.44683 164.758 4.33634 165.075 4.26731C165.407 4.18445 165.732 4.14301 166.05 4.14301C166.931 4.14301 167.696 4.29494 168.346 4.59874C169.01 4.88876 169.559 5.29615 169.992 5.82094C170.425 6.33191 170.75 6.93264 170.967 7.62316C171.183 8.31366 171.291 9.05249 171.291 9.83967C171.291 10.5578 171.19 11.2552 170.988 11.9319C170.8 12.6086 170.504 13.2093 170.1 13.7341C169.71 14.2451 169.212 14.6593 168.606 14.9769C167.999 15.2809 167.285 15.4327 166.462 15.4327C166.086 15.4327 165.703 15.405 165.314 15.3498C164.938 15.3085 164.577 15.2186 164.231 15.0805C163.884 14.9425 163.566 14.7629 163.278 14.542C163.003 14.321 162.772 14.031 162.585 13.672H162.541V15.1428H160.202V0.352153ZM168.822 9.79823C168.822 9.31487 168.757 8.84535 168.628 8.38962C168.497 7.93387 168.303 7.53339 168.043 7.18813C167.783 6.82906 167.458 6.54596 167.068 6.33882C166.678 6.11786 166.23 6.00737 165.725 6.00737C164.686 6.00737 163.899 6.35261 163.364 7.04313C162.845 7.73365 162.585 8.652 162.585 9.79823C162.585 10.3368 162.65 10.8409 162.78 11.3104C162.924 11.7662 163.133 12.1598 163.408 12.4912C163.682 12.8226 164.007 13.085 164.382 13.2784C164.772 13.4717 165.22 13.5684 165.725 13.5684C166.288 13.5684 166.765 13.4579 167.155 13.2369C167.545 13.016 167.862 12.7329 168.108 12.3876C168.368 12.0286 168.548 11.6281 168.649 11.1861C168.764 10.7304 168.822 10.2678 168.822 9.79823Z'
        fill={textColor}
      />
      <defs>
        <linearGradient
          id={`paint${number1}_linear`}
          x1='0'
          y1='9.55318e-05'
          x2='0'
          y2='16'
          gradientUnits='userSpaceOnUse'
        >
          <stop offset='0' stopColor={color[0]} />
          <stop offset='1' stopColor={color[1] || color[0]} />
        </linearGradient>
        <linearGradient
          id={`paint${number2}_linear`}
          x1='0'
          y1='9.55318e-05'
          x2='0'
          y2='16'
          gradientUnits='userSpaceOnUse'
        >
          <stop offset='0' stopColor={color[0]} />
          <stop offset='1' stopColor={color[1] || color[0]} />
        </linearGradient>
      </defs>
    </svg>
  )
}

FullLogo.propTypes = {
  color: PropTypes.array,
  textColor: PropTypes.string,
  id: PropTypes.string,
}

type LogoType = {
  color?: [string, string]
  width: number | undefined
  className?: string | undefined
  id: string
}
export const Logo: FC<LogoType> = ({
  color = ['#53BCFF', '#1CA2F7'],
  width = undefined,
  className = undefined,
  id = '1',
}) => {
  const number1 = id + 'logo'
  const number2 = number1 + '2'

  return (
    <svg viewBox='0 0 29 16' width={width} fill='none' xmlns='http://www.w3.org/2000/svg' className={className}>
      <path
        d='M27.4011 4.1618C28.0456 5.27309 28.3981 6.51785 28.4282 7.7887L28.4251 7.78572C28.4413 8.62166 28.3295 9.45536 28.0941 10.2604C27.7244 11.5227 26.8093 12.989 25.7944 13.8447C23.3768 15.8805 21.6138 15.998 18.4098 15.998C18.3155 15.998 18.2232 15.9985 18.1326 15.999C17.1617 16.0042 16.4045 16.0084 15.8435 15.38C15.3315 14.8076 15.1429 13.8008 15.6764 13.058C16.1762 12.3608 16.8186 12.1994 17.9943 12.214L18.0172 12.2145C18.5877 12.225 19.8842 12.2489 20.4119 12.214C22.6556 12.0566 24.4151 10.3067 24.4944 8.15416C24.4882 6.64822 23.8214 5.54301 23.055 4.8869C21.6682 3.7008 20.0817 3.75927 18.6933 3.81044C17.3343 3.86052 16.1651 3.90361 15.5584 2.76596C14.8578 1.43906 15.8819 0.128347 17.1573 0.0344002C18.1661 -0.0389968 20.9087 -0.000830013 21.8562 0.206118C24.2752 0.747754 26.2391 2.1436 27.4011 4.1618Z'
        fill={`url(#paint${number1}_linear_logo)`}
      />
      <path
        d='M6.57419 0.206214C4.15363 0.74785 2.19004 2.1437 1.0327 4.16176C0.386522 5.27269 0.0324466 6.51753 0.00104638 7.7888C-0.0121977 8.62379 0.100343 9.45628 0.335194 10.2605C0.704661 11.5228 1.6198 12.9891 2.63446 13.8448C5.05186 15.8806 6.8147 15.9981 10.0185 15.9981C10.1129 15.9981 10.2054 15.9986 10.296 15.9991C11.268 16.0043 12.0237 16.0084 12.5846 15.3801C13.098 14.8077 13.2851 13.8009 12.7517 13.0581C12.252 12.3609 11.6096 12.1995 10.4355 12.2141C10.2091 12.217 9.99997 12.22 9.80605 12.2229C8.99412 12.2347 8.44847 12.2427 8.01665 12.2141C5.77326 12.0567 4.01375 10.3068 3.93449 8.15426C3.9406 6.64832 4.60734 5.5431 5.37386 4.887C6.76054 3.7009 8.34687 3.75937 9.73519 3.81053C11.094 3.86061 12.2632 3.9037 12.8698 2.76606C13.5703 1.43916 12.5464 0.128443 11.271 0.0344962C10.2624 -0.0389008 7.51999 -0.000734041 6.57419 0.206214Z'
        fill={`url(#paint${number2}_linear_logo)`}
      />
      <defs>
        <linearGradient
          id={`paint${number1}_linear_logo`}
          x1='0'
          y1='9.55318e-05'
          x2='0'
          y2='16'
          gradientUnits='userSpaceOnUse'
        >
          <stop offset='0' stopColor={color[0]} />
          <stop offset='1' stopColor={color[0]} />
        </linearGradient>
        <linearGradient
          id={`paint${number2}_linear_logo`}
          x1='0'
          y1='9.55318e-05'
          x2='0'
          y2='16'
          gradientUnits='userSpaceOnUse'
        >
          <stop offset='0' stopColor={color[1]} />
          <stop offset='1' stopColor={color[1]} />
        </linearGradient>
      </defs>
    </svg>
  )
}

Logo.propTypes = {
  color: PropTypes.array,
  width: PropTypes.number,
  className: PropTypes.string,
  id: PropTypes.string,
}

export const Loader: FC<Omit<SvgIcon, 'color'>> = ({ width = '78px', height = '78px', className = undefined }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      width={width}
      height={height}
      className={className}
      viewBox='0 0 100 100'
      preserveAspectRatio='xMidYMid'
    >
      <circle cx='30' cy='50' fill='#53bcff' r='20'>
        <animate
          attributeName='cx'
          repeatCount='indefinite'
          dur='1s'
          keyTimes='0;0.5;1'
          values='30;70;30'
          begin='-0.5s'
        />
      </circle>
      <circle cx='70' cy='50' fill='#1ca2f7' r='20'>
        <animate attributeName='cx' repeatCount='indefinite' dur='1s' keyTimes='0;0.5;1' values='30;70;30' begin='0s' />
      </circle>
      <circle cx='30' cy='50' fill='#53bcff' r='20'>
        <animate
          attributeName='cx'
          repeatCount='indefinite'
          dur='1s'
          keyTimes='0;0.5;1'
          values='30;70;30'
          begin='-0.5s'
        />
        <animate
          attributeName='fill-opacity'
          values='0;0;1;1'
          calcMode='discrete'
          keyTimes='0;0.499;0.5;1'
          dur='1s'
          repeatCount='indefinite'
        />
      </circle>
    </svg>
  )
}
Loader.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
}

export const LoaderSpin: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '#1ca2f7', ...props }) => {
  return (
    <svg
      xmlns='http://www.w3.org/2000/svg'
      viewBox='0 0 100 100'
      preserveAspectRatio='xMidYMid'
      {...props}
      width={width}
      height={height}
    >
      <circle
        cx='50'
        cy='50'
        fill='none'
        stroke={color}
        strokeWidth='10'
        r='35'
        strokeDasharray='164.93361431346415 56.97787143782138'
      >
        <animateTransform
          attributeName='transform'
          type='rotate'
          repeatCount='indefinite'
          dur='1s'
          values='0 50 50;360 50 50'
          keyTimes='0;1'
        />
      </circle>
    </svg>
  )
}
LoaderSpin.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
}

export const ArrowDown: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '#000' }) => {
  return (
    <svg
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
      x='0px'
      y='0px'
      width={width}
      height={height}
      fill={color}
      viewBox='0 0 213.333 213.333'
    >
      <polygon points='0,53.333 106.667,160 213.333,53.333 		' />
    </svg>
  )
}
ArrowDown.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
}

export const Home: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '#000' }) => {
  return (
    <svg
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
      x='0px'
      y='0px'
      width={width}
      height={height}
      fill={color}
      viewBox='0 0 460.298 460.297'
    >
      <path
        d='M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041
            c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629
            c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939
            z'
      />
      <path
        d='M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816
            c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245
            c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136
            c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998
            L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125
            c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z'
      />
    </svg>
  )
}
Home.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
}

export const Logout: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '#000' }) => {
  return (
    <svg
      version='1.1'
      xmlns='http://www.w3.org/2000/svg'
      x='0px'
      y='0px'
      viewBox='0 0 512 512'
      width={width}
      height={height}
      fill={color}
    >
      <path
        d='M255.15,468.625H63.787c-11.737,0-21.262-9.526-21.262-21.262V64.638c0-11.737,9.526-21.262,21.262-21.262H255.15
            c11.758,0,21.262-9.504,21.262-21.262S266.908,0.85,255.15,0.85H63.787C28.619,0.85,0,29.47,0,64.638v382.724
            c0,35.168,28.619,63.787,63.787,63.787H255.15c11.758,0,21.262-9.504,21.262-21.262
            C276.412,478.129,266.908,468.625,255.15,468.625z'
      />
      <path
        d='M505.664,240.861L376.388,113.286c-8.335-8.25-21.815-8.143-30.065,0.213s-8.165,21.815,0.213,30.065l92.385,91.173
            H191.362c-11.758,0-21.262,9.504-21.262,21.262c0,11.758,9.504,21.263,21.262,21.263h247.559l-92.385,91.173
            c-8.377,8.25-8.441,21.709-0.213,30.065c4.167,4.21,9.653,6.336,15.139,6.336c5.401,0,10.801-2.041,14.926-6.124l129.276-127.575
            c4.04-3.997,6.336-9.441,6.336-15.139C512,250.302,509.725,244.88,505.664,240.861z'
      />
    </svg>
  )
}
Logout.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
}

export const Delete: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '', className = undefined }) => {
  return (
    <svg
      viewBox='-57 0 512 512'
      xmlns='http://www.w3.org/2000/svg'
      width={width}
      height={height}
      fill={color || undefined}
      className={className}
    >
      <path d='m156.371094 30.90625h85.570312v14.398438h30.902344v-16.414063c.003906-15.929687-12.949219-28.890625-28.871094-28.890625h-89.632812c-15.921875 0-28.875 12.960938-28.875 28.890625v16.414063h30.90625zm0 0' />
      <path d='m344.210938 167.75h-290.109376c-7.949218 0-14.207031 6.78125-13.566406 14.707031l24.253906 299.90625c1.351563 16.742188 15.316407 29.636719 32.09375 29.636719h204.542969c16.777344 0 30.742188-12.894531 32.09375-29.640625l24.253907-299.902344c.644531-7.925781-5.613282-14.707031-13.5625-14.707031zm-219.863282 312.261719c-.324218.019531-.648437.03125-.96875.03125-8.101562 0-14.902344-6.308594-15.40625-14.503907l-15.199218-246.207031c-.523438-8.519531 5.957031-15.851562 14.472656-16.375 8.488281-.515625 15.851562 5.949219 16.375 14.472657l15.195312 246.207031c.527344 8.519531-5.953125 15.847656-14.46875 16.375zm90.433594-15.421875c0 8.53125-6.917969 15.449218-15.453125 15.449218s-15.453125-6.917968-15.453125-15.449218v-246.210938c0-8.535156 6.917969-15.453125 15.453125-15.453125 8.53125 0 15.453125 6.917969 15.453125 15.453125zm90.757812-245.300782-14.511718 246.207032c-.480469 8.210937-7.292969 14.542968-15.410156 14.542968-.304688 0-.613282-.007812-.921876-.023437-8.519531-.503906-15.019531-7.816406-14.515624-16.335937l14.507812-246.210938c.5-8.519531 7.789062-15.019531 16.332031-14.515625 8.519531.5 15.019531 7.816406 14.519531 16.335937zm0 0' />
      <path d='m397.648438 120.0625-10.148438-30.421875c-2.675781-8.019531-10.183594-13.429687-18.640625-13.429687h-339.410156c-8.453125 0-15.964844 5.410156-18.636719 13.429687l-10.148438 30.421875c-1.957031 5.867188.589844 11.851562 5.34375 14.835938 1.9375 1.214843 4.230469 1.945312 6.75 1.945312h372.796876c2.519531 0 4.816406-.730469 6.75-1.949219 4.753906-2.984375 7.300781-8.96875 5.34375-14.832031zm0 0' />
    </svg>
  )
}
Delete.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
}

type BackLinkType = {
  size?: number
  color?: string
  arrowColor?: string
}
export const BackLink: FC<BackLinkType> = ({ size = 16, color = '#fff', arrowColor = '#000' }) => {
  return (
    <svg width={size} height={size} viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>
      <rect width={size} height={size} rx={size / 2} fill={color || undefined} />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M28 20C28 20.5523 27.5523 21 27 21H15.4142L19.7071 25.2929C20.0976 25.6834 20.0976 26.3166 19.7071 26.7071C19.3166 27.0976 18.6834 27.0976 18.2929 26.7071L12.2929 20.7071C11.9024 20.3166 11.9024 19.6834 12.2929 19.2929L18.2929 13.2929C18.6834 12.9024 19.3166 12.9024 19.7071 13.2929C20.0976 13.6834 20.0976 14.3166 19.7071 14.7071L15.4142 19H27C27.5523 19 28 19.4477 28 20Z'
        fill={arrowColor}
        fillOpacity='0.87'
      />
    </svg>
  )
}
BackLink.propTypes = {
  size: PropTypes.number,
  color: PropTypes.string,
  arrowColor: PropTypes.string,
}

export const TelegramIcon: FC = () => {
  return (
    <svg viewBox='0 0 25 24' xmlns='http://www.w3.org/2000/svg'>
      <path d='M12.5 0C5.87258 0 0.5 5.37258 0.5 12C0.5 18.6274 5.87258 24 12.5 24C19.1274 24 24.5 18.6274 24.5 12C24.5 5.37258 19.1274 0 12.5 0ZM18.7371 7.59075L16.6058 17.7656C16.58 17.8887 16.5237 18.0033 16.4421 18.0989C16.3605 18.1946 16.2561 18.2681 16.1386 18.3129C16.0211 18.3577 15.8942 18.3722 15.7697 18.3551C15.6451 18.3381 15.5268 18.29 15.4257 18.2153L12.3255 15.9249L10.4473 17.6968C10.4228 17.72 10.3938 17.7381 10.3622 17.75C10.3305 17.7618 10.2968 17.7673 10.263 17.766C10.2293 17.7647 10.1961 17.7567 10.1654 17.7425C10.1348 17.7282 10.1073 17.708 10.0845 17.683L10.0442 17.6387L10.3705 14.4805L16.2526 9.10622C16.2817 9.07969 16.2998 9.04321 16.3033 9.004C16.3068 8.96478 16.2955 8.92567 16.2716 8.89438C16.2477 8.86309 16.2129 8.8419 16.1742 8.83497C16.1354 8.82805 16.0955 8.8359 16.0622 8.85699L8.53977 13.6181L5.3 12.53C5.21386 12.5011 5.13878 12.4462 5.08506 12.3729C5.03135 12.2996 5.00163 12.2115 4.99999 12.1206C4.99835 12.0297 5.02486 11.9406 5.07588 11.8654C5.12691 11.7902 5.19996 11.7326 5.285 11.7006L17.9609 6.9255C18.0587 6.8887 18.1646 6.87885 18.2675 6.89697C18.3704 6.91509 18.4665 6.96052 18.5458 7.02851C18.6252 7.0965 18.6848 7.18455 18.7184 7.28345C18.7521 7.38236 18.7585 7.48849 18.7371 7.59075Z' />
    </svg>
  )
}

export const FacebookIcon: FC = () => {
  return (
    <svg viewBox='0 0 25 24' xmlns='http://www.w3.org/2000/svg'>
      <path d='M12.5 0C5.87258 0 0.5 5.37258 0.5 12C0.5 18.6274 5.87258 24 12.5 24C19.1274 24 24.5 18.6274 24.5 12C24.5 5.37258 19.1274 0 12.5 0ZM15.6683 7.19194C15.6683 7.19194 14.4404 7.09519 13.9567 7.27378C13.1572 7.56909 13.1382 8.25975 13.1382 8.91834V10.2634H15.5827L15.2255 12.8363H13.1382V19.1875H10.3773V12.8363H8.08175V10.2634H10.3774V8.08125C10.3774 5.77069 12.1559 4.93355 13.2163 4.83309C14.2767 4.73264 15.6683 5.034 15.6683 5.034V7.19194Z' />
    </svg>
  )
}

export const InstagramIcon: FC = () => {
  return (
    <svg width='25' height='24' viewBox='0 0 25 24' xmlns='http://www.w3.org/2000/svg'>
      <g clipPath='url(#clip0)'>
        <path d='M15.2542 6.91528H9.74569C9.43964 6.91528 9.13659 6.97555 8.85383 7.09267C8.57107 7.20979 8.31416 7.38146 8.09774 7.59787C7.88133 7.81428 7.70967 8.0712 7.59255 8.35395C7.47543 8.63671 7.41515 8.93976 7.41516 9.24581V14.7543C7.41516 15.3724 7.6607 15.9652 8.09776 16.4022C8.31417 16.6186 8.57108 16.7903 8.85384 16.9074C9.13659 17.0245 9.43964 17.0848 9.74569 17.0848H15.2542C15.8722 17.0848 16.465 16.8393 16.9021 16.4022C17.3391 15.9651 17.5846 15.3724 17.5846 14.7543V9.24581C17.5847 8.93977 17.5244 8.63672 17.4073 8.35396C17.2901 8.07121 17.1185 7.81429 16.9021 7.59788C16.6857 7.38147 16.4288 7.20981 16.146 7.09269C15.8633 6.97556 15.5602 6.91528 15.2542 6.91528ZM12.4999 15.2059C11.8659 15.2059 11.2461 15.0179 10.7189 14.6656C10.1917 14.3133 9.78077 13.8127 9.53813 13.2269C9.29549 12.6411 9.232 11.9965 9.3557 11.3746C9.4794 10.7528 9.78472 10.1815 10.2331 9.73319C10.6814 9.28484 11.2526 8.97952 11.8745 8.85582C12.4964 8.73212 13.141 8.79561 13.7267 9.03825C14.3125 9.28089 14.8132 9.69179 15.1655 10.219C15.5177 10.7462 15.7058 11.366 15.7058 12C15.7058 12.421 15.6228 12.8379 15.4617 13.2269C15.3006 13.6158 15.0645 13.9692 14.7668 14.2669C14.4691 14.5646 14.1157 14.8007 13.7267 14.9618C13.3378 15.123 12.9209 15.2059 12.4999 15.2059ZM15.8394 9.44911C15.6885 9.44912 15.5411 9.4044 15.4156 9.3206C15.2902 9.23679 15.1925 9.11768 15.1347 8.97831C15.077 8.83895 15.0619 8.68559 15.0913 8.53764C15.1207 8.38969 15.1934 8.25378 15.3 8.14711C15.4067 8.04044 15.5426 7.9678 15.6905 7.93836C15.8385 7.90893 15.9918 7.92403 16.1312 7.98176C16.2706 8.03948 16.3897 8.13724 16.4735 8.26267C16.5573 8.3881 16.6021 8.53556 16.6021 8.68641C16.6021 8.88868 16.5217 9.08267 16.3787 9.2257C16.2357 9.36874 16.0417 9.4491 15.8394 9.44911Z' />
        <path d='M12.5 9.91626C12.0878 9.91626 11.6849 10.0385 11.3423 10.2674C10.9996 10.4964 10.7325 10.8219 10.5748 11.2026C10.417 11.5834 10.3758 12.0024 10.4562 12.4066C10.5366 12.8108 10.735 13.1821 11.0265 13.4736C11.3179 13.765 11.6892 13.9635 12.0934 14.0439C12.4977 14.1243 12.9166 14.083 13.2974 13.9253C13.6782 13.7676 14.0036 13.5005 14.2326 13.1578C14.4616 12.8151 14.5838 12.4122 14.5838 12.0001C14.5838 11.4474 14.3643 10.9174 13.9735 10.5266C13.5827 10.1358 13.0526 9.91626 12.5 9.91626Z' />
        <path d='M12.5 0C5.87258 0 0.5 5.37258 0.5 12C0.5 18.6274 5.87258 24 12.5 24C19.1274 24 24.5 18.6274 24.5 12C24.5 5.37258 19.1274 0 12.5 0ZM18.75 14.6484C18.7499 15.6036 18.3705 16.5197 17.6951 17.1951C17.0197 17.8705 16.1036 18.2499 15.1484 18.25H9.85156C8.89638 18.2499 7.98033 17.8705 7.30491 17.1951C6.62949 16.5197 6.25002 15.6036 6.24997 14.6484V9.35156C6.25001 8.39638 6.62947 7.48032 7.3049 6.80491C7.98032 6.12949 8.89638 5.75004 9.85156 5.75002H15.1484C16.1036 5.75005 17.0197 6.12951 17.6951 6.80492C18.3705 7.48034 18.7499 8.39638 18.75 9.35156V14.6484Z' />
      </g>
      <defs>
        <clipPath id='clip0'>
          <rect width='24' height='24' fill='white' transform='translate(0.5)' />
        </clipPath>
      </defs>
    </svg>
  )
}

export const YoutubeIcon: FC = () => {
  return (
    <svg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'>
      <path d='M14.1926 13.3083L14.1931 18.2501L18.9208 15.7877L14.1926 13.3083Z' />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M0 16C0 7.16344 7.16345 0 16 0C24.8365 0 32 7.16344 32 16C32 24.8366 24.8365 32 16 32C7.16345 32 0 24.8366 0 16ZM23.8794 10.7062C24.4038 11.2398 24.575 12.4518 24.575 12.4518C24.575 12.4518 24.75 13.8755 24.75 15.2984V16.633C24.75 18.0566 24.575 19.4797 24.575 19.4797C24.575 19.4797 24.4038 20.6916 23.8794 21.2253C23.2798 21.8567 22.6149 21.9219 22.2391 21.9587C22.1978 21.9628 22.16 21.9665 22.1261 21.9706C19.6772 22.1487 16 22.1541 16 22.1541C16 22.1541 11.45 22.1124 10.05 21.9771C9.98364 21.9647 9.9032 21.955 9.81213 21.944C9.36871 21.8905 8.67267 21.8066 8.12006 21.2252C7.59564 20.6916 7.42499 19.4796 7.42499 19.4796C7.42499 19.4796 7.25 18.0565 7.25 16.633V15.2984C7.25 13.8755 7.42499 12.4518 7.42499 12.4518C7.42499 12.4518 7.59564 11.2399 8.12006 10.7062C8.72101 10.074 9.38647 10.0094 9.76227 9.97302C9.80304 9.96907 9.84039 9.96545 9.8739 9.96147C12.3228 9.78342 15.9962 9.78342 15.9962 9.78342H16.0038C16.0038 9.78342 19.6772 9.78342 22.1261 9.96147C22.1596 9.96545 22.197 9.96909 22.2377 9.97304C22.6133 10.0095 23.279 10.0741 23.8794 10.7062Z'
      />
    </svg>
  )
}

export const TwitterIcon: FC = () => {
  return (
    <svg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'>
      <path d='M16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0ZM22.9947 12.4154C23.0134 13.6086 22.8555 19.5745 17.1932 22.1597C11.5309 24.7449 7.25 21.5234 7.25 21.5234C10.4172 21.8216 12.4947 20.0319 12.4947 20.0319C9.92931 19.9225 9.18356 17.5361 9.18356 17.5361C10.0984 17.6952 10.7314 17.44 10.7314 17.44C7.86781 16.6713 7.94069 13.887 7.94069 13.887C8.756 14.3709 9.47194 14.2847 9.47194 14.2847C6.82044 12.3756 8.44319 9.53187 8.44319 9.53187C11.4261 13.2109 15.8944 13.3135 15.8944 13.3135C15.8311 13.0184 15.7998 12.7172 15.8011 12.4154C15.8011 10.0291 17.9037 8.83587 19.3807 8.83587C20.8576 8.83587 21.9506 9.9495 21.9506 9.9495C23.0742 9.8995 24.2774 9.13412 24.2774 9.13412C23.8001 10.5859 22.7961 11.1228 22.7961 11.1228C23.7059 11.0234 24.7503 10.5659 24.7503 10.5659C24.3974 11.3416 22.9947 12.4154 22.9947 12.4154Z' />
    </svg>
  )
}

export const LinkedinIcon: FC = () => {
  return (
    <svg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'>
      <path d='M16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0ZM11.4647 23.9167H7.89881V12.7283H11.4647V23.9167ZM9.68175 11.263C9.28495 11.263 8.89706 11.1453 8.56714 10.9249C8.23721 10.7044 7.98006 10.3911 7.82822 10.0245C7.67637 9.65791 7.63664 9.25452 7.71405 8.86535C7.79146 8.47618 7.98254 8.1187 8.26312 7.83812C8.5437 7.55754 8.90118 7.36646 9.29035 7.28905C9.67952 7.21164 10.0829 7.25137 10.4495 7.40322C10.8161 7.55507 11.1294 7.81221 11.3499 8.14214C11.5703 8.47206 11.688 8.85995 11.688 9.25675C11.688 9.78884 11.4766 10.2991 11.1004 10.6754C10.7241 11.0516 10.2138 11.263 9.68175 11.263ZM24.325 23.9167H20.825V17.7991C20.825 17.4883 20.8741 15.4272 19.1238 15.4272C18.8128 15.4195 18.5045 15.4869 18.2251 15.6238C17.9456 15.7606 17.7034 15.9628 17.5187 16.2132C17.1973 16.6421 17.0256 17.1648 17.0301 17.7008V23.9164H13.5344V12.7283H16.8604V14.2986C17.6564 13.0772 18.6597 12.6302 19.6465 12.4502C21.3982 12.1309 24.3247 13.1973 24.3247 16.3815L24.325 23.9167Z' />
    </svg>
  )
}

export const DiscordIcon: FC = () => {
  return (
    <svg width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M16 32C24.8366 32 32 24.8366 32 16C32 7.16344 24.8366 0 16 0C7.16344 0 0 7.16344 0 16C0 24.8366 7.16344 32 16 32ZM22.2378 10.1368C22.2479 10.141 22.2562 10.1486 22.2612 10.1583C24.2939 13.1469 25.2979 16.5182 24.9225 20.3994C24.9217 20.4075 24.9193 20.4154 24.9152 20.4226C24.9112 20.4297 24.9057 20.4359 24.899 20.4407C23.5385 21.4484 22.016 22.2164 20.3971 22.7117C20.3857 22.7153 20.3734 22.7151 20.3621 22.7112C20.3508 22.7074 20.3409 22.7001 20.334 22.6903C19.9916 22.2153 19.6845 21.7159 19.4152 21.196C19.4115 21.1888 19.4093 21.1809 19.4089 21.1728C19.4084 21.1648 19.4097 21.1567 19.4126 21.1492C19.4155 21.1416 19.4199 21.1348 19.4257 21.1291C19.4314 21.1234 19.4382 21.1189 19.4458 21.116C19.932 20.9332 20.402 20.7097 20.8506 20.4478C20.8587 20.4429 20.8655 20.4361 20.8704 20.428C20.8753 20.4199 20.8781 20.4107 20.8786 20.4013C20.8791 20.3918 20.8772 20.3824 20.8732 20.3738C20.8692 20.3652 20.8631 20.3578 20.8555 20.3521C20.7605 20.2814 20.6661 20.2072 20.576 20.1329C20.5679 20.1263 20.558 20.1221 20.5476 20.1208C20.5371 20.1195 20.5266 20.1213 20.5171 20.1258C17.6062 21.4702 14.4169 21.4702 11.4711 20.1258C11.4617 20.1215 11.4512 20.12 11.4409 20.1214C11.4307 20.1228 11.421 20.127 11.413 20.1336C11.3229 20.2079 11.2285 20.2814 11.1341 20.3521C11.1266 20.3578 11.1206 20.3653 11.1166 20.3739C11.1127 20.3825 11.1109 20.392 11.1114 20.4014C11.112 20.4109 11.1149 20.4201 11.1198 20.4282C11.1248 20.4362 11.1316 20.443 11.1398 20.4478C11.5894 20.7075 12.0589 20.9312 12.5439 21.1168C12.5515 21.1195 12.5584 21.1239 12.5641 21.1295C12.5699 21.1351 12.5744 21.1419 12.5773 21.1494C12.5803 21.1568 12.5816 21.1649 12.5812 21.1729C12.5808 21.1809 12.5788 21.1888 12.5751 21.196C12.3102 21.7188 12.0027 22.2189 11.6556 22.6911C11.6485 22.7006 11.6386 22.7077 11.6273 22.7114C11.616 22.7151 11.6038 22.7153 11.5925 22.7118C9.97645 22.2148 8.45661 21.4468 7.0978 20.4407C7.09128 20.4357 7.08584 20.4293 7.08182 20.4221C7.07779 20.4148 7.07527 20.4069 7.07438 20.3986C6.76079 17.0416 7.40004 13.6424 9.73359 10.1576C9.73929 10.1483 9.74772 10.1411 9.75771 10.1369C10.9246 9.60096 12.1562 9.21911 13.4216 9.00094C13.4331 8.99913 13.4449 9.00082 13.4554 9.00579C13.4659 9.01076 13.4747 9.01877 13.4805 9.02879C13.6521 9.33228 13.8068 9.645 13.9439 9.96553C15.3077 9.75849 16.6951 9.75849 18.059 9.96553C18.1951 9.64581 18.3474 9.33317 18.5151 9.02879C18.5207 9.01855 18.5294 9.01034 18.54 9.00534C18.5506 9.00034 18.5624 8.9988 18.5739 9.00094C19.8392 9.21957 21.0708 9.60139 22.2378 10.1368ZM11.3974 16.5411C11.3974 17.5406 12.1281 18.3545 13.015 18.3545C13.9161 18.3545 14.6327 17.5406 14.6327 16.541C14.6469 15.5486 13.9232 14.7276 13.015 14.7276C12.114 14.7276 11.3974 15.5415 11.3974 16.5411ZM17.3784 16.5411C17.3784 17.5406 18.1092 18.3545 18.9961 18.3545C19.9043 18.3545 20.6138 17.5406 20.6138 16.541C20.6279 15.5486 19.9043 14.7276 18.9961 14.7276C18.095 14.7276 17.3784 15.5415 17.3784 16.5411Z'
      />
    </svg>
  )
}

export const DeleteCross: FC<SvgIcon> = ({ width = '16px', height = '16px', color = '', className = undefined }) => {
  return (
    <svg
      viewBox='0 0 24 24'
      xmlns='http://www.w3.org/2000/svg'
      width={width}
      height={height}
      fill={color || undefined}
      className={className}
    >
      <path d='M12 4c-4.419 0-8 3.582-8 8s3.581 8 8 8 8-3.582 8-8-3.581-8-8-8zm3.707 10.293c.391.391.391 1.023 0 1.414-.195.195-.451.293-.707.293s-.512-.098-.707-.293l-2.293-2.293-2.293 2.293c-.195.195-.451.293-.707.293s-.512-.098-.707-.293c-.391-.391-.391-1.023 0-1.414l2.293-2.293-2.293-2.293c-.391-.391-.391-1.023 0-1.414s1.023-.391 1.414 0l2.293 2.293 2.293-2.293c.391-.391 1.023-.391 1.414 0s.391 1.023 0 1.414l-2.293 2.293 2.293 2.293z' />
    </svg>
  )
}
DeleteCross.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  color: PropTypes.string,
  className: PropTypes.string,
}
